- job:
    name: leg-virt-tianocore-edk2-upstream
    project-type: freestyle
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 30
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
                - job-workspace
            linaro:
                - job-read
                - job-extended-read
                - job-build
                - job-cancel
    parameters:
        - string:
            name: BUNDLE_STREAM_NAME
            default: '/private/team/linaro/leg-edk2/'
        - string:
            name: LAVA_SERVER
            default: 'validation.linaro.org/RPC2/'
    disabled: false
    node: build
    display-name: 'Linaro EDK II - UEFI Continuous Integration (upstream)'
    scm:
        - git:
            url: https://github.com/tianocore/edk2.git
            refspec: +refs/heads/master:refs/remotes/origin/master
            name: origin
            branches:
                - refs/heads/master
            basedir: edk2
            skip-tag: true
            shallow-clone: true
            clean: true
            wipe-workspace: false
    triggers:
        - pollscm: 'H/5 * * * *'
    wrappers:
        - timestamps
        - copy-to-slave:
            includes:
                - gcc-linaro-arm-linux-gnueabihf-4.8-2014.04_linux.tar.xz
                - gcc-linaro-aarch64-linux-gnu-4.8-2014.04_linux.tar.xz
        - build-name:
            name: '#${BUILD_NUMBER}-${GIT_REVISION,length=8}'
    builders:
        - linaro-publish-token
        - shell: |
            #!/bin/bash

            set -ex

            trap cleanup_exit INT TERM EXIT

            cleanup_exit()
            {
              cd ${WORKSPACE}
              rm -rf arm-tc
              rm -rf arm64-tc
              rm -rf out
            }

            # Install custom toolchain
            mkdir arm-tc arm64-tc
            tar --strip-components=1 -C ${WORKSPACE}/arm-tc -xf gcc-linaro-arm-linux-gnueabihf-4.8-*_linux.tar.xz
            tar --strip-components=1 -C ${WORKSPACE}/arm64-tc -xf gcc-linaro-aarch64-linux-gnu-4.8-*_linux.tar.xz
            export PATH="${WORKSPACE}/arm-tc/bin:${WORKSPACE}/arm64-tc/bin:$PATH"
            export OUTDIR=${WORKSPACE}/out

            (
                unset WORKSPACE

                NUM_THREADS=$((`getconf _NPROCESSORS_ONLN` + 1))

                # Initialise the build environment
                cd edk2
                make -C BaseTools

                source edksetup.sh
                export GCC48_AARCH64_PREFIX=aarch64-linux-gnu-
                export GCC48_ARM_PREFIX=arm-linux-gnueabihf-

                for type in DEBUG RELEASE
                do
                    for arch in AARCH64 ARM
                    do
                        mkdir -p ${OUTDIR}/${arch}/${type}

                        build -a ${arch} -t GCC48 -b ${type} -n $NUM_THREADS -p ArmPlatformPkg/ArmVirtualizationPkg/ArmVirtualizationQemu.dsc -D INTEL_BDS
                        cp Build/ArmVirtualizationQemu-${arch}/${type}_GCC48/FV/QEMU_EFI.fd ${OUTDIR}/${arch}/${type}
                    done

                    build -a AARCH64 -t GCC48 -b ${type} -n $NUM_THREADS -p ArmPlatformPkg/ArmVirtualizationPkg/ArmVirtualizationXen.dsc
                    cp Build/ArmVirtualizationXen-AARCH64/${type}_GCC48/FV/XEN_EFI.fd ${OUTDIR}/AARCH64/${type}
                done
            )

            ${HOME}/bin/linaro-cp out components/kernel/${JOB_NAME}/${BUILD_NUMBER}

        - shell: |
            DEVICE_TYPE-mustang
            XEN_EFI_URL=https://snapshots.linaro.org/components/kernel/${JOB_NAME}/${BUILD_NUMBER}/AARCH64/RELEASE/XEN_EFI.fd
            TEMPLATE=https://git.linaro.org/ci/job/configs.git/blob_plain/HEAD:/leg-virt-tiancore-edk2-upstream/lava-job-definitions/xen/template.json

            wget -O - -q --no-check-certificate $TEMPLATE | \
            sed -e "s|\${BUILD_URL}|${BUILD_URL}|" \
                -e "s|\${BUNDLE_STREAM_NAME}|${BUNDLE_STREAM_NAME}|" \
                -e "s|\${XEN_EFI_URL}|${XEN_EFI_URL}|" \
                -e "s|\${LAVA_SERVER}|${LAVA_SERVER}|" \
                > custom_lava_job_definition_xen_aarch64_uefi.json

            cat << EOF > post_build_lava_parameters_xen_aarch64_uefi
            DEVICE_TYPE=${DEVICE_TYPE}
            BUNDLE_STREAM_NAME=${BUNDLE_STREAM_NAME}
            CUSTOM_JSON_URL=${JOB_URL}ws/custom_lava_job_definition_xen_aarch64_uefi.json
            LAVA_SERVER=${LAVA_SERVER}
            EOF
        - trigger-builds:
            - project: 'post-build-lava'
              property-file: post_build_lava_parameters_xen_aarch64_uefi
              block: true
    publishers:
        - email:
            recipients: 'ard.biesheuvel@linaro.org'
