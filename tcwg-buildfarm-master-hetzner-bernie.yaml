- job:
    name: 'tcwg-buildfarm-master-hetzner-bernie'
    project-type: matrix
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 100
        artifactDaysToKeep: 2
        artifactNumToKeep: 40
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
        - copyartifact:
            projects: tcwg-benchmark
    parameters:
        - string:
            name: gcc_branch
            default: 'latest'
            description: 'GCC revision to build'
        - string:
            name: host_x86_64_languages
            default: 'default'
            description: 'Languages to build for x86_64-hosted toolchains, e.g., "c,c++" or "all" or "default"'
        - string:
            name: host_aarchXX_languages
            default: 'c,c++'
            description: 'Languages to build for AArchXX-hosted toolchains, e.g., "c,c++" or "all" or "default"'
        - string:
            name: runtests
            default: 'x86_64-host'
            description: 'Run toolchain testsuites: "yes", "no", "x86_64-host"'
        - bool:
            name: try_bootstrap
            default: 'true'
            description: 'Attempt to bootstrap GCC for compatible host and target combinations'
        - string:
            name: excludecheck
            default: 'gdb'
            description: 'Do not run "make check" on this component'
        - bool:
            name: rebuild
            default: true
            description: 'Rebuild the toolchain even if results are already on logserver'
        - string:
            name: log_name
            default: ''
            description: 'Logname directory on logserver; leave empty for default'
        - bool:
            name: dont_fail
            default: false
            description: 'Do not fail the build'
        - string:
            name: log_server
            default: ex40-01.tcwglab.linaro.org:logs-master
            description: 'Log_Server'
        - string:
            name: abe_branch
            default: refs/heads/master
            description: 'ABE revision to test'
    disabled: false
    node: tcwg-x86_64-ex40
    retry-count: 3
    concurrent: true
    display-name: 'TCWG ZZZ Buildfarm Master Hetzner Bernie'
    scm:
        - git:
            url: https://git-us.linaro.org/toolchain/abe.git
            refspec: +refs/changes/*:refs/remotes/changes/*
            branches:
                - ${abe_branch}
            skip-tag: true
            shallow-clone: true
            wipe-workspace: true
    axes:
        - axis:
            type: slave
            name: label
            values:
                - tcwg-x86_64-ex40
        - axis:
            type: user-defined
            name: target
            values:
                - aarch64-linux-gnu
                - aarch64-none-elf
                - aarch64_be-none-elf
                - arm-linux-gnueabi
                - arm-linux-gnueabihf
                - armeb-linux-gnueabihf
                - native
                - schroot-i386-native
                - schroot-armhf-native
    execution-strategy:
        combination-filter: |
            (label=="tcwg-x86_64-ex40" && target!="schroot-armhf-native") || (label=="tcwg-aarch64-build" && (target=="native" || target=="schroot-armhf-native"))
        sequential: false
    wrappers:
        - timeout:
            timeout: 600
        - timestamps
        - ssh-agent-credentials:
            # tcwg-buildslave user id
            users:
                - 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
        - build-name:
            name: '#${BUILD_NUMBER}-${ENV,var="gcc_branch"}'
    builders:
        - shell: |
            #!/bin/bash

            set -e
            set -x

            case ${target} in
              schroot-*)
                schroot_arch=$(echo ${target} | sed -e "s/^schroot-\([^-]*\)-\(.*\)/\1/")
                target=$(echo ${target} | sed -e "s/^schroot-\([^-]*\)-\(.*\)/\2/")
                ;;
              *)
                case $(uname -m) in
                  x86_64) schroot_arch="amd64" ;;
                  aarch64) schroot_arch="arm64" ;;
                  *) echo "Unexpected architecture $(uname -m)"; exit 1 ;;
                esac
                ;;
            esac
            schroot_image="tcwg-build-${schroot_arch}-trusty"

            case $(uname -m) in
              x86_64) languages="$host_x86_64_languages" ;;
              *) languages="$host_aarchXX_languages" ;;
            esac

            case "$runtests-$(uname -m)" in
              "yes"-*) runtests_opt="--runtests" ;;
              "x86_64-host"-x86_64) runtests_opt="--runtests" ;;
              *) runtests_opt="" ;;
            esac

            if $try_bootstrap; then
              bootstrap="--bootstrap"
            else
              bootstrap=""
            fi

            if [ x"$log_name" != x"" ]; then
              eval "logname_opt=\"--logname $log_name\""
            fi

            if $rebuild; then
              norebuild=""
            else
              norebuild="--norebuild"
            fi

            ulimit -u 5000

            session_id=$(schroot -b -c chroot:$schroot_image --preserve-environment)
            BUILD_SHELL="schroot -r -c session:$session_id --preserve-environment -- bash"
            $BUILD_SHELL -c "echo \"Build session is up; ulimit config:\"; ulimit -a"

            # Sometimes /dev/pts can't get unmounted on the first try.
            # Workaround by retrying.
            trap "schroot -f -e -c session:$session_id || sleep 60 || schroot -f -e -c session:$session_id" 0 1 2 3 5 9 13 15

            ${BUILD_SHELL} -x ./jenkins.sh --target ${target} --gcc-branch ${gcc_branch} --languages ${languages} $bootstrap $runtests_opt --excludecheck ${excludecheck} --fileserver ex40-01.tcwglab.linaro.org/snapshots-ref --logserver $log_server $logname_opt $norebuild -o '--tarbin' || result="$?"

            #Do not trigger a benchmark if jenkins.sh exits without error and
            #without having built a toolchain (probably because --norebuild was
            #set and the logs already existed).
            if -e _build/snapshots/gcc-linaro-*.tar.xz; then
              #Cases for which we want to trigger a benchmark
              if test "x${target}" = xarm-linux-gnueabihf ||
                 test "x${target}" = xaarch64-linux-gnu; then
                cp _build/snapshots/gcc-linaro-*.tar.xz _build/toolchain-"${JOB_NAME////_}".tar.xz
                cp _build/snapshots/sysroot-*-linaro-*.tar.xz _build/sysroot-"${JOB_NAME////_}".tar.xz
                cat > bench_parameters <<EOF
            BENCHMARK=fakebench
            TOOLCHAIN=${BUILD_URL}/artifact/toolchain-${JOB_NAME////_}.tar.xz
            SYSROOT=${BUILD_URL}/artifact/sysroot-${JOB_NAME////_}.tar.xz
            TARGET_CONFIG=Juno-A53
            EOF
                #No need for a 'remove bench_params' case, as we wipe workspace
              fi
            fi

            echo "Result of jenkins.sh: $result"
            if $dont_fail; then
              result="0"
            fi
            exit $result
    publishers:
      - archive:
          artifacts: |
            _build/toolchain-${JOB_NAME////_}.tar.xz
            _build/sysroot-${JOB_NAME////_}.tar.xz
          only-if-success: true
          fingerprint: true
          allow-empty: true
      #If bench_parameters is missing, we don't set any parameters and
      #therefore do not trigger.
      - trigger-parameterized-builds:
           - project: tcwg-benchmark
             condition: SUCCESS
             property-file: bench_parameters
