- job:
    name: android-lcr-member-vexpress
    project-type: freestyle
    defaults: global
    logrotate:
        daysToKeep: 90
        numToKeep: 100
    properties:
        - authorization:
            anonymous:
                - job-read
            linaro:
                - job-build
                - job-cancel
    parameters:
        - string:
            name: BUILD_CONFIG_FILENAME
            default: 'lcr-member-vexpress'
        - password:
            name: PRIVATE_KEY
            default: ${PRIVATE_KEY}
    disabled: false
    node: docker-utopic-aosp
    display-name: 'Versatile Express - Member LCR Android Build'
    concurrent: true
    wrappers:
        - timestamps
        - timeout:
            timeout: 500
    builders:
        - linaro-publish-token
        - shell: |
            #!/bin/bash

            trap cleanup_exit INT TERM EXIT

            cleanup_exit()
            {
              kill -9 ${SSH_AGENT_PID}
            }

            java -version
            sudo add-apt-repository ppa:linaro-maintainers/tools
            sudo apt-get update
            sudo apt-get install -y bison git gperf libxml2-utils python-mako zip time python-pycurl genisoimage patch linaro-image-tools

            mkdir -p ${HOME}/bin ${WORKSPACE}/build/out
            curl https://storage.googleapis.com/git-repo-downloads/repo > ${HOME}/bin/repo
            wget https://git.linaro.org/ci/publishing-api.git/blob_plain/HEAD:/linaro-cp.py -O ${HOME}/bin/linaro-cp.py
            chmod a+x ${HOME}/bin/*
            export PATH=${HOME}/bin:${PATH}

            if [ ! -d "/home/buildslave/srv/${JOB_NAME}" ]; then
              sudo mkdir -p /home/buildslave/srv/${JOB_NAME}
              sudo chmod 777 /home/buildslave/srv/${JOB_NAME}
            fi
            cd /home/buildslave/srv/${JOB_NAME}

            git config --global user.email "ci_notify@linaro.org"
            git config --global user.name "Linaro CI"

            TMPKEYDIR=$(mktemp -d /tmp/projectara.XXXXXX)
            cat > ${TMPKEYDIR}/private-key-wrapper.py << EOF
            #!/usr/bin/python

            import os
            import sys

            def main():
                private_key = os.environ.get("PRIVATE_KEY", "Undefined")
                if private_key == "Undefined":
                    sys.exit("PRIVATE_KEY is not defined.")

                buffer = private_key.replace(' ','\n')
                with open('linaro-private-key', 'w') as f:
                    f.write('-----BEGIN RSA PRIVATE KEY-----\n')
                    f.write(buffer)
                    f.write('\n-----END RSA PRIVATE KEY-----\n')

            if __name__ == "__main__":
                    main()
            EOF
            python ${TMPKEYDIR}/private-key-wrapper.py
            chmod 0600 ${WORKSPACE}/linaro-private-key
            eval `ssh-agent` >/dev/null 2>/dev/null
            ssh-add ${WORKSPACE}/linaro-private-key >/dev/null 2>/dev/null
            rm -rf ${WORKSPACE}/linaro-private-key ${TMPKEYDIR}

            # Runs as ubuntu
            set -xe
            rm -rf build-tools jenkins-tools build/out build/android-patchsets
            git clone --depth 1 https://git.linaro.org/people/vishal.bhoj/linaro-android-build-tools-ci.git build-tools
            git clone --depth 1 https://git.linaro.org/infrastructure/linaro-jenkins-tools.git jenkins-tools

            cat << EOF > config.txt
            BUILD_CONFIG_REPO=http://android.git.linaro.org/git/android-build-configs.git
            BUILD_CONFIG_BRANCH=master
            EOF
            echo config.txt
            export CONFIG=`base64 -w 0 config.txt`

            build-tools/node/build us-east-1.ec2-git-mirror.linaro.org "${CONFIG}"
            cp -a /home/buildslave/srv/${JOB_NAME}/build/out/*.xml ${WORKSPACE}/

            PUB_SERVER=https://snapshots.linaro.org/
            PUB_DEST=/android/$JOB_NAME/$BUILD_NUMBER

            time linaro-cp.py \
              --manifest \
              --no-build-info \
              --link-latest \
              --split-job-owner \
              --server ${PUBLISH_SERVER} \
              build/out \
              ${PUB_DEST} \
              --include "^[^/]+[._](img[^/]*|tar[^/]*|xml|sh|config)$" \
              --include "^[BHi][^/]+txt$" \
              --include "^(MANIFEST|MD5SUMS)$"

            #build-tools/node/lava-submit "${CONFIG}"
            #
            #for f in $(ls -1 build/out/lava-job-info* 2>/dev/null); do
            #  time linaro-cp.py \
            #    --no-build-info \
            #    --split-job-owner \
            #    --server ${PUBLISH_SERVER} \
            #    ${f} \
            #    ${PUB_DEST}
            #done

            export DEVICE_TYPE=vexpress-tc2
            export BUNDLE_STREAM_NAME="/private/team/wg/wg-private/"
            cat << EOF > ${WORKSPACE}/post_build_lava_parameters
            DEVICE_TYPE=${DEVICE_TYPE}
            BUNDLE_STREAM_NAME=${BUNDLE_STREAM_NAME}
            EOF

            echo "Build finished"
        - trigger-builds:
            - project: 'post-build-lava'
              property-file: post_build_lava_parameters
              block: true
    publishers:
        - archive:
            artifacts: '*.xml'
            latest-only: true
        - logparser:
            parse-rules: 'Android Build'
            unstable-on-warning: false
            fail-on-error: false
        - fingerprint:
            files: 'build/fingerprints/*'
        - email:
            recipients: 'vishal.bhoj@linaro.org fathi.boudra@linaro.org daniel.diaz@linaro.org'
