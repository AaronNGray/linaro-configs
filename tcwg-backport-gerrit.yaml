- job:
    name: tcwg-backport-gerrit
    project-type: freestyle
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 100
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
            linaro:
                - job-build
                - job-cancel
    disabled: false
    node: tcwg-x86_64-01
    concurrent: true
    display-name: 'TCWG Backport -- Gerrit'
    scm:
        - git:
            url: https://git.linaro.org/toolchain/gcc.git
            refspec: ${GERRIT_REFSPEC}
            branches:
                - ${GERRIT_BRANCH}
            skip-tag: true
            wipe-workspace: false
            choosing-strategy: gerrit
    triggers:
        - gerrit:
            server-name: 'review.linaro.org'
            override-votes: true
            gerrit-build-successful-verified-value: 1
            gerrit-build-failed-verified-value: -1
            gerrit-build-successful-codereview-value: 1
            gerrit-build-failed-codereview-value: -1
            readable-message: true
            successful-message: 'Sanity check OK'
            failure-message: 'Sanity check FAIL'
            trigger-for-unreviewed-patches: true
            projects:
                - project-compare-type: 'PLAIN'
                  project-pattern: 'toolchain/gcc'
                  branches:
                    - branch-compare-type: 'ANT'
                      branch-pattern: '**'
    wrappers:
        - timeout:
            timeout: 900
        - timestamps
        - ssh-agent-credentials:
            # tcwg-buildslave user id
            user: 'e0958a95-204f-4c14-a66c-5e2be6c5d50a'
        - build-name:
            name: '#${BUILD_NUMBER}-${GERRIT_PATCHSET_REVISION,length=8}'
    builders:
        - shell: |
            #!/bin/bash

            set -e
            set -x

            gcc_patch=$GERRIT_PATCHSET_REVISION
            gcc_orig=gcc_patch_prev
            abe_branch=6be687f3c462661af375a98d47b5fbb0d8ddeaa2

            gcc_patch_rev=$(git rev-parse $gcc_patch)
            if [ x"$gcc_orig" = x"gcc_patch_prev" ]; then
              gcc_orig="$gcc_patch_rev^"
            fi
            gcc_orig_rev=$(git rev-parse $gcc_orig)

            echo "gcc_branch=gcc.git@$gcc_orig_rev" > gcc_orig_parameters
            echo "log_name=tcwg-backport-$gcc_orig_rev/\$(uname -m).\$target" >> gcc_orig_parameters
            echo "rebuild=false" >> gcc_orig_parameters
            echo "dont_fail=true" >> gcc_orig_parameters
            echo "abe_branch=$abe_branch" >> gcc_orig_parameters

            echo "gcc_branch=gcc.git@$gcc_patch_rev" > gcc_patch_parameters
            echo "log_name=tcwg-backport-$gcc_patch_rev/\$(uname -m).\$target" >> gcc_patch_parameters
            echo "rebuild=false" >> gcc_patch_parameters
            echo "dont_fail=true" >> gcc_patch_parameters
            echo "abe_branch=$abe_branch" >> gcc_patch_parameters

            echo "ref_logs=tcwg-backport-$gcc_orig_rev" > compare_results_parameters
            echo "new_logs=tcwg-backport-$gcc_patch_rev" >> compare_results_parameters
            echo "abe_branch=$abe_branch" >> compare_results_parameters
        - trigger-builds:
            - project: tcwg-buildfarm-master
              parameter-factories:
                - factory: filebuild
                  file-pattern: gcc_*_parameters
              block: true
        - trigger-builds:
            - project: tcwg-compare-results-master
              property-file: compare_results_parameters
              block: true
