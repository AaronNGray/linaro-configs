- job:
    name: 96boards-hikey
    project-type: freestyle
    defaults: global
    logrotate:
        daysToKeep: 30
        numToKeep: 30
    properties:
        - authorization:
            anonymous:
                - job-read
                - job-extended-read
                - job-workspace
    parameters:
        - password:
            name: PUBLISH_KEY
            default: ${PUBLISH_KEY}
        - string:
            name: ROOTFS
            default: 'alip developer'
    disabled: false
    node: docker-utopic
    display-name: '96boards - HiKey'
    scm:
        - git:
            url: https://github.com/96boards/linux.git
            refspec: +refs/heads/hikey:refs/remotes/origin/hikey
            name: origin
            branches:
                - refs/heads/hikey
            skip-tag: true
            shallow-clone: true
            wipe-workspace: false
    wrappers:
        - timestamps
        - build-name:
            name: '#${BUILD_NUMBER}-${GIT_REVISION,length=8}'
    builders:
        - shell: |
            #!/bin/bash

            set -ex

            trap cleanup_exit INT TERM EXIT

            cleanup_exit()
            {
              cd ${WORKSPACE}
              sudo kpartx -dv out/hikey-jessie_*.img || true
              rm -rf lci-build-tools
              rm -rf builddir*
              rm -rf out
            }

            sudo apt-get install -y kpartx python-pycurl
            wget http://repo.linaro.org/ubuntu/linaro-overlay/pool/main/a/android-tools/android-tools-fsutils_4.2.2+git20130218-3ubuntu41+linaro1_amd64.deb
            sudo dpkg -i --force-all android-tools-fsutils_*.deb
            rm -f android-tools-fsutils_*.deb

            export LANG=C
            export make_bootwrapper=false
            export make_install=true
            export kernel_flavour=hikey
            export kernel_config=defconfig
            export MAKE_DTBS=true
            export ARCH=arm64
            export tcbindir="${HOME}/srv/toolchain/arm64-tc-14.09/bin"
            export toolchain_url=http://releases.linaro.org/14.09/components/toolchain/binaries/gcc-linaro-aarch64-linux-gnu-4.9-2014.09_linux.tar.xz

            test -d lci-build-tools || git clone https://git.linaro.org/git/ci/lci-build-tools.git lci-build-tools
            bash -x lci-build-tools/jenkins_kernel_build_inst
            rm -rf out/dtbs

            # Create the hardware pack
            cat << EOF > linaro-hikey
            format: '3.0'
            name: linaro-hikey
            architectures:
            - arm64
            origin: Linaro
            maintainer: Linaro Platform <linaro-dev@lists.linaro.org>
            support: supported
            serial_tty: ttyAMA0
            kernel_addr: '0x60000000'
            initrd_addr: '0x62000000'
            load_addr: '0x60008000'
            dtb_addr: '0x61000000'
            partition_layout: bootfs16_rootfs
            mmc_id: '0:1'
            kernel_file: boot/Image-*-hikey
            initrd_file: boot/initrd.img-*-hikey
            dtb_file: lib/firmware/*-linaro-hikey/device-tree/hi6220-hikey.dtb
            boot_script: boot.scr
            boot_min_size: 65
            extra_serial_options:
            - console=tty0
            - console=ttyAMA0,115200n8
            - k3v2mem
            - hisi_dma_print=0
            - vmalloc=484M
            - no_irq_affinity
            - maxcpus=8
            assume_installed:
            - adduser
            - apt
            - apt-utils
            - debconf-i18n
            - debian-archive-keyring
            - gcc-4.8
            - gnupg
            - ifupdown
            - initramfs-tools
            - iproute2
            - irqbalance
            - isc-dhcp-client
            - kmod
            - netbase
            - udev
            packages:
            - linux-image-arm64
            - linux-headers-arm64
            - firmware-linux
            - firmware-ti-connectivity
            - ti-uim
            - ti-calibrator
            sources:
              debian: http://ftp.debian.org/debian/ jessie main contrib non-free
              repo: http://repo.linaro.org/ubuntu/linaro-overlay jessie main
            EOF

            VERSION=`date +%Y%m%d`-${BUILD_NUMBER}
            linaro-hwpack-create --debug linaro-hikey ${VERSION}
            linaro-hwpack-replace -t `ls hwpack_linaro-hikey_*_arm64_supported.tar.gz` -p `ls linux-image-*-linaro-hikey_*.deb` -r linux-image -d -i
            linaro-hwpack-replace -t `ls hwpack_linaro-hikey_*_arm64_supported.tar.gz` -p `ls linux-headers-*-linaro-hikey_*.deb` -r linux-headers -d -i

            echo "console=tty0 console=ttyAMA0,115200n8 root=/dev/disk/by-partlabel/system rootwait rw" > cmdline.emmc
            echo "console=tty0 console=ttyAMA0,115200n8 root=/dev/mmcblk1p2 rootwait rw" > cmdline

            for rootfs in ${ROOTFS}; do
              # Get rootfs
              export ROOTFS_BUILD_NUMBER=`wget -q --no-check-certificate -O - https://ci.linaro.org/job/debian-arm64-rootfs/label=build,rootfs=${rootfs}/lastSuccessfulBuild/buildNumber`
              export ROOTFS_BUILD_TIMESTAMP=`wget -q --no-check-certificate -O - https://ci.linaro.org/job/debian-arm64-rootfs/label=build,rootfs=${rootfs}/lastSuccessfulBuild/buildTimestamp?format=yyyyMMdd`
              export ROOTFS_BUILD_URL="http://snapshots.linaro.org/debian/images/${rootfs}-arm64/${ROOTFS_BUILD_NUMBER}/linaro-jessie-${rootfs}-${ROOTFS_BUILD_TIMESTAMP}-${ROOTFS_BUILD_NUMBER}.tar.gz"
              wget --progress=dot -e dotbytes=2M ${ROOTFS_BUILD_URL}

              # Create pre-built image(s)
              linaro-media-create --dev fastmodel --output-directory ${WORKSPACE}/out --image-file hikey-jessie_${rootfs}_${VERSION}.img --image-size 2G --binary linaro-jessie-${rootfs}-${ROOTFS_BUILD_TIMESTAMP}-${ROOTFS_BUILD_NUMBER}.tar.gz --hwpack hwpack_linaro-hikey_*.tar.gz --hwpack-force-yes --bootloader uefi

              # Create eMMC rootfs image(s)
              mkdir boot rootfs
              for device in $(sudo kpartx -av out/hikey-jessie_${rootfs}_${VERSION}.img | cut -d' ' -f3); do
                partition=$(echo ${device} | cut -d'p' -f3)
                [ "${partition}" = "1" ] && sudo mount -o loop /dev/mapper/${device} boot
                [ "${partition}" = "2" ] && sudo mount -o loop /dev/mapper/${device} rootfs
              done

              sudo cp -a boot/hi6220-hikey.dtb boot/lcb.dtb || true
              sudo cp -a boot/initrd.img-* boot/ramdisk.img || true
              sudo cp -a cmdline boot/cmdline || true

              sudo ln -sf /etc/resolvconf/run/resolv.conf rootfs/etc/resolv.conf

              cat << EOF | sudo tee rootfs/etc/network/interfaces.d/eth0
            #auto eth0
            #iface eth0 inet dhcp
            EOF

              cat << EOF | sudo tee rootfs/etc/network/interfaces.d/wlan0
            #auto wlan0
            #iface wlan0 inet dhcp
            #    wpa-driver nl80211
            #    wpa-ssid YOUR-SSID-HERE
            #    wpa-psk YOUR-PASSWORD-HERE
            #    pre-up /sbin/iw wlan0 set power_save off
            #    pre-up echo 0 > /sys/kernel/debug/ieee80211/phy0/wlcore/sleep_auth
            EOF

              sudo rm -rf rootfs/dev rootfs/boot rootfs/var/lib/apt/lists
              sudo mkdir rootfs/dev rootfs/boot rootfs/var/lib/apt/lists

              sudo make_ext4fs -o -L rootfs -l 1500M -s out/hikey-jessie_${rootfs}_${VERSION}.emmc.img rootfs/
              sudo umount boot rootfs
              sudo kpartx -dv out/hikey-jessie_${rootfs}_${VERSION}.img
              sudo rm -rf boot rootfs

              # Compress image(s)
              gzip -9 out/hikey-jessie_${rootfs}_${VERSION}.emmc.img
              gzip -9 out/hikey-jessie_${rootfs}_${VERSION}.img
            done

            # Create boot image(s)
            mkdir boot-fat
            dd if=/dev/zero of=out/boot-fat.img bs=512 count=131072
            sudo mkfs.fat -n "BOOT IMG" out/boot-fat.img
            sudo mount -o loop,rw,sync out/boot-fat.img boot-fat
            sudo cp -a out/Image boot-fat/Image || true
            sudo cp -a out/hi6220-hikey.dtb boot-fat/lcb.dtb || true
            sudo cp -a out/initrd.img-* boot-fat/ramdisk.img || true
            sudo cp -a cmdline boot-fat/cmdline || true
            sudo umount boot-fat
            sudo chmod 777 out/boot-fat.img
            dd if=/dev/zero of=out/boot-fat.emmc.img bs=512 count=131072
            sudo mkfs.fat -n "BOOT IMG" out/boot-fat.emmc.img
            sudo mount -o loop,rw,sync out/boot-fat.emmc.img boot-fat
            sudo cp -a out/Image boot-fat/Image || true
            sudo cp -a out/hi6220-hikey.dtb boot-fat/lcb.dtb || true
            sudo cp -a out/initrd.img-* boot-fat/ramdisk.img || true
            sudo cp -a cmdline.emmc boot-fat/cmdline || true
            sudo umount boot-fat
            sudo chmod 777 out/boot-fat.emmc.img
            dd if=/dev/zero of=out/boot-fat.uefi.img bs=512 count=131072
            sudo mkfs.fat -n "BOOT IMG" out/boot-fat.uefi.img
            sudo mount -o loop,rw,sync out/boot-fat.uefi.img boot-fat
            sudo cp -a out/Image out/hi6220-hikey.dtb boot-fat/ || true
            sudo cp -a out/initrd.img-* boot-fat/initrd.img || true
            sudo umount boot-fat
            sudo chmod 777 out/boot-fat.uefi.img
            rm -rf boot-fat

            # Compress boot partition image(s)
            gzip -9 out/boot-fat.emmc.img
            gzip -9 out/boot-fat.uefi.img
            gzip -9 out/boot-fat.img

            # Create MD5SUMS file
            (cd out && md5sum * > MD5SUMS.txt)

            # Publish
            test -d ${HOME}/bin || mkdir ${HOME}/bin
            wget https://git.linaro.org/ci/publishing-api.git/blob_plain/HEAD:/linaro-cp.py -O ${HOME}/bin/linaro-cp.py
            python ${HOME}/bin/linaro-cp.py --server http://builds.96boards.org/ out snapshots/hikey/debian/${BUILD_NUMBER}
    publishers:
        - email:
            recipients: 'fathi.boudra@linaro.org'
